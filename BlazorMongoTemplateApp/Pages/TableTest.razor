@page "/tabletest"

<h3>TableTest</h3>

<input type="number" @bind="Count" />
<button class="btn btn-info" @onclick="Generate">Generate</button>

<br />

@if (Outillages.Count == Count)
{
    <Table T="Outillage" CollectionT="Outillages" @ref="TableOutillage">
        <Header>
            <HeaderValue Value="Libelle" SortBy="@(nameof(Outillage.Libelle))" OnSort="TableOutillage.Sort" />
            <HeaderValue Value="Nb" SortBy="@(nameof(Outillage.Nb))" OnSort="TableOutillage.Sort" />
        </Header>
        <Row>
            <RowValue Value="@context.Libelle" />
            <RowValue Value="@context.Nb" />
        </Row>
    </Table>

}



@code {

    private int Count { get; set; }

    public Table<Outillage> TableOutillage { get; set; }

    private List<Outillage> Outillages { get; set; } = new List<Outillage>();
    private static readonly Random Random = new();

    private static string RandomString(int length)
    {
        const string chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        return new string(Enumerable.Repeat(chars, length)
            .Select(s => s[Random.Next(s.Length)]).ToArray());
    }



    private void Generate()
    {
        Outillages = new List<Outillage>();

        for (var i = 1; i <= Count; i++)
        {
            Outillages.Add(new Outillage
            {
                Libelle = RandomString(10),
                Nb = i
            });
        }
    }



}
