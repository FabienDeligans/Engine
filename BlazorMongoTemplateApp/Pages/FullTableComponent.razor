@page "/FullTableComponent"
@using BlazorMongoTemplateApp.Pages.Modal
@inherits ModalComponentCaller

<h3>TableComponent Exemple</h3>
<h4>Full options</h4>
<br />

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="SearchParameter" @bind="@SearchParameter">
    <label class="form-check-label" for="SearchParameter">Search Parameter with GetFilterableText Parameter</label>
</div>

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="PaginationParameter" @bind="@PaginationParameter">
    <label class="form-check-label" for="PaginationParameter">Pagination Parameter with PerPageParameter Parameter</label>
</div>

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="PerPageParameter" @bind="@PerPageParameter">
    <label class="form-check-label" for="PerPageParameter">Per Page Parameter</label>
</div>

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="AccordionParameter" @bind="@AccordionParameter">
    <label class="form-check-label" for="AccordionParameter">Accordion Parameter</label>
</div>

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="WithTabParameter" @bind="@WithTabParameter">
    <label class="form-check-label" for="WithTabParameter">WithTabParameter Parameter</label>
</div>

<br />

<input type="number" class="form-control" @bind="Number" />
<button @onclick="Generate" class="btn btn-info">Generate @Number datas</button>
<button @onclick="Drop" class="btn btn-info">Drop</button>

<br />
<br />

@if (Outillages.Any())
{
    <TableComponent CustomItems="Outillages"
                Search="SearchParameter"
                GetFilterableText=@(v => $"{v.Libelle}")
                Pagination="PaginationParameter"
                PerPage="PerPageParameter"
                PageSize="10"
                Accordion="AccordionParameter"
                NbCol="10"
                WithTab="WithTabParameter"
                @ref="ChildComponentOutillage">
        <TableHeader>
            <th><button class="btn btn-light" @onclick="@(() => ChildComponentOutillage.SortBy(v => v.Id))"><b>Id</b></button></th>
            <th><button class="btn btn-light" @onclick="@(() => ChildComponentOutillage.SortBy(v => v.Libelle))"><b>Libelle</b></button></th>
            <th><button class="btn btn-light" @onclick="@(() => ChildComponentOutillage.SortBy(v => v.Nb))"><b>Outillage Nb</b></button></th>
        </TableHeader>
        <RowTemplate>
            <td>@context.Id</td>
            <td>@context.Libelle</td>
            <td>@context.Nb</td>
        </RowTemplate>
        <RenderFragmentCollapse>
            <TableComponent CustomItems="Exemplaires.Where(v => v.OutillageId == context.Id)"
                        Context="ex">
                <TableHeader>
                    <th>Exemplaire Id</th>
                    <th>Exemplaire Libelle</th>
                    <th>Outillage ID</th>
                    <th>Exemplaire NB</th>
                    <th>Button</th>
                </TableHeader>
                <RowTemplate>
                    <td>@ex.Id</td>
                    <td>@ex.Libelle</td>
                    <td>@ex.OutillageId</td>
                    <td>@ex.Nb</td>
                    <button class="btn btn-info" @onclick="@(() => ShowModal<CreateUpdateEntity>(ex.Id, "Modification"))">Show Modal</button>
                </RowTemplate>
            </TableComponent>
        </RenderFragmentCollapse>
    </TableComponent>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="spinner"></div>
        </div>
    </div>
}